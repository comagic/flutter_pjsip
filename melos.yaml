name: my_project

packages:
  - packages/**
  - .

scripts:
  get-pjsip:
    description: Analyze the project
    run: bash scripts/get-pjsip.sh

  gen-ffi-bindings:
    description: Generate FFI bindings
    run: bash scripts/gen-ffi-bindings.sh

  build-ios:
    description: Build the project for iOS
    run: bash scripts/build-ios.sh

  build-android:
    description: Build the project for Android
    run: bash scripts/build-android.sh

  build:
    description: Build the project
    run: melos build-ios && melos build-android

  prepare:
    description: Prepare the project for hacking
    run: melos bs && melos get-pjsip && melos gen-ffi-bindings && melos build

  analyze:
    description: Analyze the project
    exec: flutter analyze
    failFast: true

  check-format:
    description: Check the format of all packages in this project
    exec: dart format --set-exit-if-changed .
    failFast: true

  test:
    description: Run all Dart, Flutter and integration tests for all packages in this project
    run: melos run test-dart --no-select && melos run test-flutter --no-select && melos run test-integration --no-select -- $1

  test-dart:
    description: Run all Dart tests for all packages in this project
    exec: dart test test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: false
      dirExists: test

  test-flutter:
    description: Run all Flutter tests for all packages in this project
    exec: flutter test test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: true
      dirExists: test

  test-integration:
    description: Run all integration tests for all packages in this project
    exec: flutter test integration_test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: true
      dirExists: integration_test

  check-all:
    description: Run all checks for all packages in this project
    run: melos analyze && melos check-format && melos test -- $1

  publish-with-hooks:
    description: Publish the project (melos don't support hooks for publish command)
    run: bash scripts/pre-publish.sh && melos publish -y --no-dry-run && bash scripts/post-publish.sh

  clean-working-tree:
    description: Clean working tree, leave only resulting files
    run: bash scripts/clean-working-tree.sh

  create-lib-archive:
    description: Create archive with compiled libraries
    run: bash scripts/create-lib-archive.sh

command:
  clean:
    hooks:
      post: bash scripts/clean.sh
